// Code generated by github.com/99designs/gqlgen, DO NOT EDIT.

package model

import (
	"time"
)

type AuthRes struct {
	User  *User  `json:"user"`
	Token string `json:"token"`
}

type Comment struct {
	ID              int                `json:"id"`
	PostID          int                `json:"postID"`
	UserID          int                `json:"userID"`
	Body            string             `json:"body"`
	CreatedAt       time.Time          `json:"createdAt"`
	ParentCommentID *int               `json:"parentCommentID,omitempty"`
	Replies         *CommentConnection `json:"replies,omitempty"`
}

type CommentConnection struct {
	Edges    []*CommentEdge `json:"edges"`
	PageInfo *PageInfo      `json:"pageInfo"`
}

type CommentEdge struct {
	Cursor string   `json:"cursor"`
	Node   *Comment `json:"node"`
}

type CreateCommentReq struct {
	PostID          int    `json:"postID"`
	ParentCommentID *int   `json:"parentCommentID,omitempty"`
	Body            string `json:"body"`
}

type CreatePostReq struct {
	Title         string `json:"title"`
	Body          string `json:"body"`
	AllowComments bool   `json:"allowComments"`
}

type LoginReq struct {
	Email    string `json:"email"`
	Password string `json:"password"`
}

type Mutation struct {
}

type PageInfo struct {
	StartCursor *string `json:"startCursor,omitempty"`
	EndCursor   *string `json:"endCursor,omitempty"`
	HasNextPage bool    `json:"hasNextPage"`
	HasPrevPage bool    `json:"hasPrevPage"`
}

type Query struct {
}

type RegisterReq struct {
	Email    string `json:"email"`
	Username string `json:"username"`
	Password string `json:"password"`
}

type UpdateCommentReq struct {
	ID   int    `json:"id"`
	Body string `json:"body"`
}

type UpdatePostReq struct {
	Title         *string `json:"title,omitempty"`
	Body          *string `json:"body,omitempty"`
	AllowComments *bool   `json:"allowComments,omitempty"`
}
